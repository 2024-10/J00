<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Mandalart</title>
    <link rel="stylesheet" href="/css/base.css">
    <link rel="stylesheet" href="/css/viewMandalart.css">
    <style>
        .cell.active {
            background-color: #F4FFE8 !important;
        }
        #checklist-container {
            display: none;
            margin-top: 20px;
        }
        #checklist-list {
            margin-top: 10px;
        }
        #calendar {
            margin-top: 20px;
        }
    </style>
    <script src="https://apis.google.com/js/api.js"></script>
</head>
<body>
    <header id="main-header">
        <a href="/">
            <img src="/images/logo.svg" alt="logo" class="logo">
        </a>
        <nav id="main-navigation">
            <ul class="menu">
                <li class="menu-item"><button onclick="window.location.href='/mandalart'" class="nav-button active">My Mandalart</button></li>
                <li class="menu-item"><button onclick="window.location.href='/share'" class="nav-button">Share</button></li>
                <li class="menu-item"><button onclick="window.location.href='/profile'" class="nav-button">Profile</button></li>
            </ul>
        </nav>
    </header>
    
    <div class="container">
        <h3>나의 만다라트</h3>
        <button onclick="window.location.href='/mandalart/change/<%= mandalart.mandalart_id %>'">수정</button>
        <div id="mandalart-grid" class="mandalart grid-<%= mandalart.tedolist_count %>"></div>
        <div id="checklist-container" class="container arr1-container" style="display:none;">
            <div class="editContainer">
                <% tedolists.forEach((tedolist, index) => { %>
                    <input type="text" class="tedolist-detail-input" value="<%= tedolist.tedolist_detail %>" readonly />
                    <input type="hidden" class="tedolist-number" value="<%= tedolist.tedolist_number %>" />
                    <% if (checklists[tedolist.tedolist_number]) { %>
                        <ul>
                            <% checklists[tedolist.tedolist_number].forEach(checklist => { %>
                                <li><%= checklist.checklist_detail %></li>
                            <% }); %>
                        </ul>
                    <% } %>
                <% }); %>
            </div>
        </div>
        
        <div id="checklist-container">
            <ul id="checklist-list"></ul>
        </div>

        <div id="calendar"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const container = document.querySelector('.mandalart');
            const centerGoal = '<%= mandalart.centerGoal %>';
            const tedolistCount = <%= mandalart.tedolist_count %>;

            if (container) {
                if (tedolistCount > 0) {
                    generateMandalart(container, centerGoal, tedolistCount);
                    addCellClickHandlers('<%= mandalart.mandalart_id %>');
                }
            }

            handleClientLoad();
        });

        function generateMandalart(container, centerGoal, numCells) {
            const positions = getPositions(numCells);

            positions.forEach((pos, index) => {
                const cell = document.createElement('div');
                cell.classList.add('cell', pos);
                cell.dataset.position = pos;

                const inputDetail = document.querySelectorAll('.tedolist-detail-input')[index];
                const inputNumber = document.querySelectorAll('.tedolist-number')[index];

                if (inputDetail && inputNumber) {
                    const textDiv = document.createElement('div');
                    textDiv.classList.add('cell-text');
                    textDiv.innerText = inputDetail.value;
                    cell.dataset.tedolistNumber = inputNumber.value;
                    cell.dataset.hasTedolistDetail = "true";
                    cell.appendChild(textDiv);
                } else {
                    cell.dataset.hasTedolistDetail = "false";
                }

                container.appendChild(cell);
            });

            const centerCell = document.createElement('div');
            centerCell.classList.add('cell', 'center');
            centerCell.dataset.position = 'center';
            centerCell.innerText = centerGoal;
            container.appendChild(centerCell);
        }

        function getPositions(numCells) {
            switch (numCells) {
                case 2:
                    return ["left", "right"];
                case 3:
                    return ["left", "right", "down"];
                case 4:
                    return ["up", "left", "right", "down"];
                case 5:
                    return ["up", "left", "right", "down-left", "down-right"];
                case 6:
                    return ["up", "up-left", "up-right", "down", "down-left", "down-right"];
                case 7:
                    return ["up-left", "up-right", "left", "right", "down-left", "down", "down-right"];
                case 8:
                    return ["up-left", "up", "up-right", "left", "right", "down-left", "down", "down-right"];
                default:
                    return [];
            }
        }

        function addCellClickHandlers(mandalartId) {
            const cells = document.querySelectorAll('.mandalart .cell');
            cells.forEach(cell => {
                if (!cell.classList.contains('center')) {
                    cell.addEventListener('click', async (event) => {
                        if (cell.dataset.hasTedolistDetail === "true") {
                            cells.forEach(c => c.classList.remove('active'));
                            event.target.classList.add('active');
                            const tedolistNumber = event.target.dataset.tedolistNumber;
                            console.log(`Tedolist Number: ${tedolistNumber}`);
                            await loadChecklists(mandalartId, tedolistNumber);
                        } else {
                            document.querySelector('#checklist-container').style.display = 'none';
                        }
                    });
                }
            });
        }

        async function loadChecklists(mandalartId, tedolistNumber) {
            const response = await fetch(`/mandalart/checklists/${mandalartId}/${tedolistNumber}`);
            if (response.ok) {
                const checklists = await response.json();
                const checklistContainer = document.querySelector('#checklist-list');
                checklistContainer.innerHTML = '';
                console.log(`Checklists loaded for Tedolist Number: ${tedolistNumber}`, checklists);
                checklists.forEach(checklist => {
                    const li = document.createElement('li');
                    li.textContent = checklist.checklist_detail;
                    checklistContainer.appendChild(li);
                });
                document.querySelector('#checklist-container').style.display = 'block';
            }
        }

        // Google Calendar API integration
        function handleClientLoad() {
            gapi.load('client:auth2', initClient);
        }

        function initClient() {
            gapi.client.init({
                apiKey: 'a23d0f0be0904c96430380874a8fd12121a9d855',
                clientId: '116996187886670619408.apps.googleusercontent.com',
                discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],
                scope: 'https://www.googleapis.com/auth/calendar.readonly',
            }).then(() => {
                gapi.auth2.getAuthInstance().signIn().then(() => {
                    loadCalendar();
                });
            });
        }

        function loadCalendar() {
            gapi.client.calendar.events.list({
                'calendarId': 'primary',
                'timeMin': (new Date()).toISOString(),
                'showDeleted': false,
                'singleEvents': true,
                'maxResults': 10,
                'orderBy': 'startTime'
            }).then(response => {
                const events = response.result.items;
                const calendarDiv = document.getElementById('calendar');
                const calendar = document.createElement('div');
                calendar.innerHTML = '<h2>Upcoming Events</h2>';
                if (events.length > 0) {
                    const ul = document.createElement('ul');
                    events.forEach(event => {
                        const li = document.createElement('li');
                        li.textContent = `${event.summary} (${event.start.dateTime || event.start.date})`;
                        ul.appendChild(li);
                    });
                    calendar.appendChild(ul);
                } else {
                    calendar.innerHTML += '<p>No upcoming events found.</p>';
                }
                calendarDiv.appendChild(calendar);
            });
        }
    </script>
</body>
</html>
