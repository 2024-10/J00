<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Mandalart</title>
    <link rel="stylesheet" href="/css/base.css">
    <link rel="stylesheet" href="/css/editMandalart.css">
    <style>
        .center {
            background: #D1E4BE;
        }
    </style>
</head>
<body>
    <header id="main-header">
        <a href="/">
            <img src="/images/logo.svg" alt="logo" class="logo">
        </a>
        <button id="nav-toggle" class="nav-toggle">
            <span class="nav-icon"></span>
            <span class="nav-icon"></span>
            <span class="nav-icon"></span>
        </button>
        <nav id="main-navigation">
            <ul class="menu">
                <li class="menu-item"><button onclick="window.location.href='/mandalart'" class="nav-button active">My Mandalart</button></li>
                <li class="menu-item"><button onclick="window.location.href='/share'" class="nav-button">Share</button></li>
                <li class="menu-item"><button onclick="window.location.href='/calendar'" class="nav-button">Calendar</button></li>
                <li class="menu-item"><button onclick="window.location.href='/profile'" class="nav-button">Profile</button></li>
            </ul>
        </nav>
    </header>

    <div class="container">
        <form id="mandalart-form" action="/mandalart/update/<%= mandalart.mandalart_id %>" method="POST">
            <h3>나의 만다라트</h3>
        
            <div id="mandalart-grid" class="mandalart grid-<%= mandalart.tedolist_count %> sortMine">
                <% function getCellClass(index, count) { 
                    const classes = [
                        ['center'],
                        ['left', 'right'],
                        ['left', 'right', 'down'],
                        ['up', 'left', 'right', 'down'],
                        ['up', 'left', 'right', 'down-left', 'down-right'],
                        ['up', 'up-left', 'up-right', 'down', 'down-left', 'down-right'],
                        ['up-left', 'up-right', 'left', 'right', 'down-left', 'down', 'down-right'],
                        ['up-left', 'up', 'up-right', 'left', 'right', 'down-left', 'down', 'down-right']
                    ];
                    return classes[count - 1][index] || '';
                } %>
                <% tedolists.forEach((tedolist, index) => { %>
                    <div class="cell <%= getCellClass(index, mandalart.tedolist_count) %>" data-tedolist-number="<%= tedolist.tedolist_number %>">
                        <div class="cell-text">
                            <%= tedolist.tedolist_detail %>
                        </div>
                        <input type="text" class="tedolist-detail-input" name="tedolistDetails[<%= index %>][tedolist_detail]" value="<%= tedolist.tedolist_detail %>" />
                        <input type="hidden" name="tedolistDetails[<%= index %>][tedolist_number]" value="<%= tedolist.tedolist_number %>" />
                    </div>
                <% }); %>
                <div class="cell center">
                    <div class="center-goal-text"><%= mandalart.centerGoal %></div>
                </div>
            </div>
            
            <div class="button-container sortMine">
                <button class="btn" type="submit">완료</button>
                <button class="btn delete-btn" type="submit" form="delete-mandalart-form">현재 만다라트 삭제하기</button>
            </div>
            <br>
        </form>

        <div id="checklist-container" class="sortMine">
            <div class="color-container">
                <div class="mandalart-color" id="green"></div>
                <div class="mandalart-color" id="yellow"></div>
                <div class="mandalart-color" id="blue"></div>
            </div>

            <div class="sticker-container">
                <div class="sticker" id="sticker1">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker2">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker3">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker4">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker5">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker6">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker7">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
                <div class="sticker" id="sticker8">
                    <img src="/images/test_sticker.png" alt="sticker" class="sticker">
                </div>
            </div>            
            
            <h4>체크리스트</h4>
            <ul id="checklist-list"></ul>
            <form id="checklist-form">
                <input type="hidden" name="tedolistNumber" id="tedolistNumber">
                <input type="hidden" name="mandalart_id" value="<%= mandalart.mandalart_id %>">
                <label for="checklistDetail">새로 추가하기</label>
                <input type="text" name="checklistDetail" id="checklistDetail">
                <button type="submit" class="btn">저장</button>
            </form>
        </div>

        <!-- 만다라트 삭제 버튼 -->
        <form id="delete-mandalart-form" action="/mandalart/delete/<%= mandalart.mandalart_id %>" method="POST" onsubmit="return confirmDelete()">
        </form>
    </div>

    <script>
        // 모바일 네비바
        document.addEventListener('DOMContentLoaded', () => {
        const navToggle = document.getElementById('nav-toggle');
        const mainNav = document.getElementById('main-navigation');
        const mainHeader = document.getElementById('main-header');

        navToggle.addEventListener('click', () => {
            mainNav.classList.toggle('active');
            mainHeader.classList.toggle('active-header');
        });

        // 만다라트 수정
        const container = document.querySelector('.mandalart');
        const tedolistCount = <%= mandalart.tedolist_count %>;

        if (container) {
            if (tedolistCount > 0) {
                addCellClickHandlers('<%= mandalart.mandalart_id %>');
                addChecklistFormHandler('<%= mandalart.mandalart_id %>');
            }
        }

        enableTedolistEditing();
    });

    function enableTedolistEditing() {
        const inputs = document.querySelectorAll('.tedolist-detail-input');
        inputs.forEach(input => {
            const textDiv = input.previousElementSibling;
            textDiv.addEventListener('click', () => {
                textDiv.style.display = 'none';
                input.style.display = 'block';
                input.focus();
            });

            input.addEventListener('blur', () => {
                textDiv.innerText = input.value;
                textDiv.style.display = 'block';
                input.style.display = 'none';
            });
        });
    }

    function addCellClickHandlers(mandalartId) {
        const cells = document.querySelectorAll('.mandalart .cell');
        cells.forEach(cell => {
            if (!cell.classList.contains('center')) {
                cell.addEventListener('click', async (event) => {
                    if (cell.dataset.tedolistNumber) {
                        cells.forEach(c => c.classList.remove('active'));
                        cell.classList.add('active');
                        const tedolistNumber = cell.dataset.tedolistNumber;
                        console.log(`Tedolist Number: ${tedolistNumber}`);
                        const input = document.querySelector('#tedolistNumber');
                        input.value = tedolistNumber;
                        document.querySelector('#checklist-container').style.display = 'block';
                        await loadChecklists(mandalartId, tedolistNumber);
                    } else {
                        document.querySelector('#checklist-container').style.display = 'none';
                    }
                });
            }
        });
    }

    function addChecklistFormHandler(mandalartId) {
        const form = document.querySelector('#checklist-form');
        form.addEventListener('submit', async (event) => {
            event.preventDefault();
            const formData = new FormData(form);
            const response = await fetch('/mandalart/addChecklist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    mandalart_id: formData.get('mandalart_id'),
                    tedolistNumber: formData.get('tedolistNumber'),
                    checklistDetail: formData.get('checklistDetail')
                })
            });
            if (response.ok) {
                const tedolistNumber = formData.get('tedolistNumber');
                console.log(`Checklist added for Tedolist Number: ${tedolistNumber}`);
                await loadChecklists(mandalartId, tedolistNumber);
                document.querySelector('#checklistDetail').value = '';  // 폼 필드 초기화
            } else {
                console.error('Failed to add checklist item');
            }
        });
    }

    async function loadChecklists(mandalartId, tedolistNumber) {
        const response = await fetch(`/mandalart/checklists/${mandalartId}/${tedolistNumber}`);
        if (response.ok) {
            const checklists = await response.json();
            const checklistContainer = document.querySelector('#checklist-list');
            checklistContainer.innerHTML = '';
            console.log(`Checklists loaded for Tedolist Number: ${tedolistNumber}`, checklists);
            checklists.forEach(checklist => {
                const li = document.createElement('li');
                li.classList.add('checklist-item');
                li.innerHTML = `
                    <span>${checklist.checklist_detail}</span>
                    <span class="delete-checklist" data-checklist-id="${checklist.checklist_id}">X</span>
                `;
                checklistContainer.appendChild(li);
            });

            document.querySelectorAll('.delete-checklist').forEach(button => {
                button.addEventListener('click', async (event) => {
                    const checklistId = event.target.dataset.checklistId;
                    await deleteChecklist(checklistId);
                    await loadChecklists(mandalartId, tedolistNumber);
                });
            });
        }
    }

    async function deleteChecklist(checklistId) {
        const response = await fetch(`/mandalart/deleteChecklist/${checklistId}`, {
            method: 'DELETE'
        });
        if (!response.ok) {
            console.error('Failed to delete checklist item');
        }
    }

    function confirmDelete() {
        return confirm('정말로 현재 만다라트를 삭제하시겠습니까?');
    }

     // 색상 클릭시 중심 색 변경 코드!! 이쪽에 색상 저장하는 코드 넣으시면 됩니다!!
     function applyColorToCell() {
        const colorElements = document.querySelectorAll('.mandalart-color');
        const cellCenter = document.querySelector('.cell.center');
    
        colorElements.forEach(element => {
            element.addEventListener('click', function() {
                const selectedColor = getComputedStyle(element).backgroundColor;
                cellCenter.style.backgroundColor = selectedColor;
            });
        });
    }
    applyColorToCell();
    
    </script>
</body>
</html>
